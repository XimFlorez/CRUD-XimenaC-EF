// <auto-generated />
using System;
using CRUDXimenaCastanedaEF.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CRUDXimenaCastanedaEF.Migrations
{
    [DbContext(typeof(Proyecto1Context))]
    [Migration("20241120215746_AddLibrosAutoresRelation")]
    partial class AddLibrosAutoresRelation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CRUDXimenaCastanedaEF.Models.Autore", b =>
                {
                    b.Property<int>("IdAutor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Autor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAutor"));

                    b.Property<string>("Apellido")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("IdAutor")
                        .HasName("PK__Autores__9626AD2681B59C6F");

                    b.ToTable("Autores");
                });

            modelBuilder.Entity("CRUDXimenaCastanedaEF.Models.Categoria", b =>
                {
                    b.Property<int>("CodigoCategoria")
                        .HasColumnType("int")
                        .HasColumnName("Codigo_categoria");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("CodigoCategoria")
                        .HasName("PK__Categori__738F04AD303E9C37");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("CRUDXimenaCastanedaEF.Models.Editoriale", b =>
                {
                    b.Property<int>("Nit")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Sitioweb")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Nit")
                        .HasName("PK__Editoria__C7D1D6DBD2583A8B");

                    b.ToTable("Editoriales");
                });

            modelBuilder.Entity("CRUDXimenaCastanedaEF.Models.Libro", b =>
                {
                    b.Property<string>("Isbn")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("CodigoCategoria")
                        .HasColumnType("int")
                        .HasColumnName("Codigo_categoria");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateOnly?>("FechaRegistro")
                        .HasColumnType("date")
                        .HasColumnName("Fecha_registro");

                    b.Property<int?>("NitEditorial")
                        .HasColumnType("int")
                        .HasColumnName("Nit_editorial");

                    b.Property<string>("NombreAutor")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Nombre_autor");

                    b.Property<DateOnly?>("Publicacion")
                        .HasColumnType("date");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Isbn")
                        .HasName("PK__Libros__9271CED1FC7FF783");

                    b.HasIndex("CodigoCategoria");

                    b.HasIndex("NitEditorial");

                    b.ToTable("Libros");
                });

            modelBuilder.Entity("CRUDXimenaCastanedaEF.Models.LibrosAutore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdAutor")
                        .HasColumnType("int")
                        .HasColumnName("ID_Autor");

                    b.Property<string>("Isbn")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id")
                        .HasName("PK__Libros_A__3214EC2716C9D033");

                    b.HasIndex("IdAutor");

                    b.HasIndex("Isbn");

                    b.ToTable("Libros_Autores", (string)null);
                });

            modelBuilder.Entity("CRUDXimenaCastanedaEF.Models.Libro", b =>
                {
                    b.HasOne("CRUDXimenaCastanedaEF.Models.Categoria", "CodigoCategoriaNavigation")
                        .WithMany("Libros")
                        .HasForeignKey("CodigoCategoria")
                        .HasConstraintName("FK__Libros__Codigo_c__4D94879B");

                    b.HasOne("CRUDXimenaCastanedaEF.Models.Editoriale", "NitEditorialNavigation")
                        .WithMany("Libros")
                        .HasForeignKey("NitEditorial")
                        .HasConstraintName("FK__Libros__Nit_edit__4E88ABD4");

                    b.Navigation("CodigoCategoriaNavigation");

                    b.Navigation("NitEditorialNavigation");
                });

            modelBuilder.Entity("CRUDXimenaCastanedaEF.Models.LibrosAutore", b =>
                {
                    b.HasOne("CRUDXimenaCastanedaEF.Models.Autore", "IdAutorNavigation")
                        .WithMany("LibrosAutores")
                        .HasForeignKey("IdAutor")
                        .IsRequired()
                        .HasConstraintName("FK_LibrosAutores_Autores");

                    b.HasOne("CRUDXimenaCastanedaEF.Models.Libro", "IsbnNavigation")
                        .WithMany("LibrosAutores")
                        .HasForeignKey("Isbn")
                        .IsRequired()
                        .HasConstraintName("FK_LibrosAutores_Libros");

                    b.Navigation("IdAutorNavigation");

                    b.Navigation("IsbnNavigation");
                });

            modelBuilder.Entity("CRUDXimenaCastanedaEF.Models.Autore", b =>
                {
                    b.Navigation("LibrosAutores");
                });

            modelBuilder.Entity("CRUDXimenaCastanedaEF.Models.Categoria", b =>
                {
                    b.Navigation("Libros");
                });

            modelBuilder.Entity("CRUDXimenaCastanedaEF.Models.Editoriale", b =>
                {
                    b.Navigation("Libros");
                });

            modelBuilder.Entity("CRUDXimenaCastanedaEF.Models.Libro", b =>
                {
                    b.Navigation("LibrosAutores");
                });
#pragma warning restore 612, 618
        }
    }
}
