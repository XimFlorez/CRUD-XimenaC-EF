@model IEnumerable<CRUDXimenaCastanedaEF.Models.LibrosAutore>

@{
    ViewData["Title"] = "Libros y Autores";
}

<link rel="stylesheet" href="~/css/site.css">

<h1 class="titulo-centrado">Gestión de Libros y Autores</h1>
@Html.AntiForgeryToken()


<p>
    <a asp-action="Create" class="btn btn-crear"><i class="fas fa-plus"></i></a>
</p>

<table class="table" id="example">
    <thead>
        <tr>
            <th>Autor</th>
            <th>ISBN</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.IdAutorNavigation.Nombre)</td>
                <td>@Html.DisplayFor(modelItem => item.IsbnNavigation.Titulo)</td>
                <td>
                    <a asp-action="Edit" class="btn btn-editar" asp-route-id="@item.Id"><i class="fas fa-edit"></i></a> 
                    <a asp-action="Details" class="btn btn-detalles" asp-route-id="@item.Id"><i class="fas fa-eye"></i></a> 
                    <button class="btn btn-eliminar" onclick="confirmDelete('@item.Id')">
                        <i class="fas fa-trash-alt"></i>
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>


<script>
    new DataTable('#example', {
        layout: {
            topStart: {
                buttons: [
                    {
                        extend: 'copy',
                        text: '<i class="fas fa-copy"></i>',
                        className: 'botonCopiar btn'
                    },
                    {
                        extend: 'csv',
                        text: '<i class="fas fa-file-csv"></i>',
                        className: 'botonCsv btn',
                        exportOptions: {
                            columns: [0, 1]
                        }
                    },
                    {
                        extend: 'excel',
                        text: '<i class="fas fa-file-excel"></i>',
                        className: 'botonExcel btn',
                        exportOptions: {
                            columns: [0, 1]
                        }
                    },
                    {
                        extend: 'pdf',
                        text: '<i class="fas fa-file-pdf"></i>',
                        className: 'botonPdf btn',
                        exportOptions: {
                            columns: [0, 1]
                        }
                    },
                    {
                        extend: 'print',
                        text: '<i class="fas fa-print"></i>',
                        className: 'botonPrint btn',
                        exportOptions: {
                            columns: [0, 1]
                        }
                    },
                    {
                        extend: 'colvis',
                        text: '<i class="fas fa-filter"></i>',
                        className: 'botonColvis btn'
                    }
                ]
            }
        },
        language: {
            "sEmptyTable": "No hay datos disponibles en la tabla",
            "sInfo": "Mostrando _START_ a _END_ de _TOTAL_ entradas",
            "sInfoEmpty": "Mostrando 0 a 0 de 0 entradas",
            "sInfoFiltered": "(filtrado de _MAX_ entradas totales)",
            "sLengthMenu": "Mostrar _MENU_ entradas",
            "sLoadingRecords": "Cargando...",
            "sProcessing": "Procesando...",
            "sSearch": "Buscar:",
            "sZeroRecords": "No se encontraron resultados"
        },
        scrollX: true,
        initComplete: function (json, settings) {
            $(".dt-buttons").removeClass("dt-buttons");
            $(".dt-button").addClass("botones");
        }
    });
    function confirmDelete(Id) {
        // Mostrar una ventana de confirmación
        Swal.fire({
            title: '¿Estás seguro?',
            text: 'No podrás recuperar este registro después de eliminarlo.',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Sí, eliminarlo!',
            cancelButtonText: 'Cancelar'
        }).then((result) => {
            if (result.isConfirmed) {
                // Realizar la solicitud AJAX si el usuario confirma la eliminación
                $.ajax({
                    url: '@Url.Action("Delete", "LibrosAutores")/' + Id, // URL del controlador para eliminar
                    type: 'POST',
                    data: {
                        id: Id,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val() // Token Anti-forgery
                    },
                    success: function (response) {
                        if (response.success) {
                            Swal.fire(
                                'Eliminado!',
                                response.message, // Mostrar el mensaje del servidor
                                'success'
                            ).then(() => {
                                location.reload(); // Recargar la página después de eliminar
                            });
                        } else {
                            Swal.fire(
                                'Error!',
                                response.message, // Mostrar el mensaje de error del servidor
                                'error'
                            );
                        }
                    },
                    error: function () {
                        Swal.fire(
                            'Error!',
                            'Hubo un problema al intentar eliminar el registro.',
                            'error'
                        );
                    }
                });
            }
        });
    }



</script>
